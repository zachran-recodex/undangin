# ======================================================================
# Workflow Name: Create New Wedding Invitation
#
# This workflow creates a new wedding invitation project using customizable
# input values provided via GitHub Actions manual dispatch.
#
# Inputs Description:
# - couple_info: Names of the groom and bride in the format "Groom Name|Bride Name".
# - event_datetime: Event date and time in the format "YYYY-MM-DD|HH:mm".
# - ceremony_times: Times for the ceremony events in the format "akad_start|akad_end|resepsi_start|resepsi_end".
# - venue_details: Venue information in the format "Name|Address|Phone".
# - maps_info: Google Maps URLs in the format "maps_url|maps_embed_url".
# - groom_bank_info: Groom's bank details in the format "Bank Name|Account Number".
# - bride_bank_info: Bride's bank details in the format "Bank Name|Account Number".
# - qris_url: URL for the QRIS image.
# - project_name (optional): Custom project name for deployment.
# ======================================================================

name: Create New Wedding Invitation

on:
  workflow_dispatch:
    inputs:
      couple_info:
        description: "Couple Names (Format: Groom Name|Bride Name)"
        required: true
        type: string
      event_datetime:
        description: "Event Date and Time (Format: YYYY-MM-DD|HH:mm)"
        required: true
        type: string
      ceremony_times:
        description: "Ceremony Times (Format: akad_start|akad_end|resepsi_start|resepsi_end)"
        required: true
        type: string
      venue_details:
        description: "Venue Details (Format: Name|Address|Phone)"
        required: true
        type: string
      maps_info:
        description: "Maps URLs (Format: maps_url|maps_embed_url)"
        required: true
        type: string
      groom_bank_info:
        description: "Groom's Bank Details (Format: Bank Name|Account Number)"
        required: true
        type: string
      bride_bank_info:
        description: "Bride's Bank Details (Format: Bank Name|Account Number)"
        required: true
        type: string
      project_name:
        description: "Custom Project Name (optional)"
        required: false
        type: string

jobs:
  create_wedding:
    runs-on: ubuntu-24.04
    steps:
      # Checkout the repository to work with the codebase.
      - uses: actions/checkout@v4

      # Setup Node.js environment with version 18.
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Setup Bun runtime environment.
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      # Parse and extract the input values from the GitHub Actions dispatch.
      - name: Parse Inputs
        id: parse
        run: |
          # --- Parsing Couple Info ---
          GROOM_NAME=$(echo "${{ github.event.inputs.couple_info }}" | cut -d'|' -f1)
          BRIDE_NAME=$(echo "${{ github.event.inputs.couple_info }}" | cut -d'|' -f2)

          # --- Parsing Event Date & Time ---
          EVENT_DATE=$(echo "${{ github.event.inputs.event_datetime }}" | cut -d'|' -f1)
          EVENT_TIME=$(echo "${{ github.event.inputs.event_datetime }}" | cut -d'|' -f2)

          # --- Parsing Ceremony Times ---
          AKAD_START=$(echo "${{ github.event.inputs.ceremony_times }}" | cut -d'|' -f1)
          AKAD_END=$(echo "${{ github.event.inputs.ceremony_times }}" | cut -d'|' -f2)
          RESEPSI_START=$(echo "${{ github.event.inputs.ceremony_times }}" | cut -d'|' -f3)
          RESEPSI_END=$(echo "${{ github.event.inputs.ceremony_times }}" | cut -d'|' -f4)

          # --- Parsing Venue Details ---
          VENUE_NAME=$(echo "${{ github.event.inputs.venue_details }}" | cut -d'|' -f1)
          VENUE_ADDRESS=$(echo "${{ github.event.inputs.venue_details }}" | cut -d'|' -f2)
          VENUE_PHONE=$(echo "${{ github.event.inputs.venue_details }}" | cut -d'|' -f3)

          # --- Parsing Maps URLs ---
          MAPS_URL=$(echo "${{ github.event.inputs.maps_info }}" | cut -d'|' -f1)
          MAPS_EMBED=$(echo "${{ github.event.inputs.maps_info }}" | cut -d'|' -f2)

          # --- Parsing Bank Details ---
          GROOM_BANK=$(echo "${{ github.event.inputs.groom_bank_info }}" | cut -d'|' -f1)
          GROOM_ACCOUNT=$(echo "${{ github.event.inputs.groom_bank_info }}" | cut -d'|' -f2)
          BRIDE_BANK=$(echo "${{ github.event.inputs.bride_bank_info }}" | cut -d'|' -f1)
          BRIDE_ACCOUNT=$(echo "${{ github.event.inputs.bride_bank_info }}" | cut -d'|' -f2)

          # Save the variables for later steps.
          echo "GROOM_NAME=${GROOM_NAME}" >> $GITHUB_ENV
          echo "BRIDE_NAME=${BRIDE_NAME}" >> $GITHUB_ENV
          echo "EVENT_DATE=${EVENT_DATE}" >> $GITHUB_ENV
          echo "EVENT_TIME=${EVENT_TIME}" >> $GITHUB_ENV
          echo "AKAD_START=${AKAD_START}" >> $GITHUB_ENV
          echo "AKAD_END=${AKAD_END}" >> $GITHUB_ENV
          echo "RESEPSI_START=${RESEPSI_START}" >> $GITHUB_ENV
          echo "RESEPSI_END=${RESEPSI_END}" >> $GITHUB_ENV
          echo "VENUE_NAME=${VENUE_NAME}" >> $GITHUB_ENV
          echo "VENUE_ADDRESS=${VENUE_ADDRESS}" >> $GITHUB_ENV
          echo "VENUE_PHONE=${VENUE_PHONE}" >> $GITHUB_ENV
          echo "MAPS_URL=${MAPS_URL}" >> $GITHUB_ENV
          echo "MAPS_EMBED=${MAPS_EMBED}" >> $GITHUB_ENV
          echo "GROOM_BANK=${GROOM_BANK}" >> $GITHUB_ENV
          echo "GROOM_ACCOUNT=${GROOM_ACCOUNT}" >> $GITHUB_ENV
          echo "BRIDE_BANK=${BRIDE_BANK}" >> $GITHUB_ENV
          echo "BRIDE_ACCOUNT=${BRIDE_ACCOUNT}" >> $GITHUB_ENV

      # Determine a custom project name that will be used when deploying.
      - name: Generate Project Name
        run: |
          if [ -n "${{ github.event.inputs.project_name }}" ]; then
            PROJECT_NAME="${{ github.event.inputs.project_name }}"
          else
            PROJECT_NAME=$(echo "${{ env.GROOM_NAME }}-${{ env.BRIDE_NAME }}-wedding-invitation" | \
              tr '[:upper:]' '[:lower:]' | \
              tr ' ' '-' | \
              sed 's/[^a-z0-9-]//g')
          fi
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV

      # Generate the configuration file for the wedding invitation website
      # using the new config.js structure.
      - name: Create Wedding Config
        run: |
          rm src/config/config.js
          cat > src/config/config.js << EOL
          const config = {
            data: {
              title: "Pernikahan \${{ env.GROOM_NAME }} & \${{ env.BRIDE_NAME }}",
              description: "Kami akan menikah dan mengundang Anda untuk turut merayakan momen istimewa ini.",
              groomName: "\${{ env.GROOM_NAME }}",
              brideName: "\${{ env.BRIDE_NAME }}",
              parentGroom: "Bapak Groom & Ibu Groom",
              parentBride: "Bapak Bride & Ibu Bride",
              date: "\${{ env.EVENT_DATE }}",
              maps_url: "\${{ env.MAPS_URL }}",
              maps_embed: "\${{ env.MAPS_EMBED }}",
              time: "\${{ env.AKAD_START }} - \${{ env.AKAD_END }} WIB",
              location: "\${{ env.VENUE_NAME }}",
              address: "\${{ env.VENUE_ADDRESS }}",
              ogImage: "/images/og-image.jpg",
              favicon: "/images/favicon.ico",
              agenda: [
                {
                  title: "Akad Nikah",
                  date: "\${{ env.EVENT_DATE }}",
                  startTime: "\${{ env.AKAD_START }}",
                  endTime: "\${{ env.AKAD_END }}",
                  location: "\${{ env.VENUE_NAME }}",
                  address: "\${{ env.VENUE_ADDRESS }}"
                },
                {
                  title: "Resepsi Nikah",
                  date: "\${{ env.EVENT_DATE }}",
                  startTime: "\${{ env.RESEPSI_START }}",
                  endTime: "\${{ env.RESEPSI_END }}",
                  location: "\${{ env.VENUE_NAME }}",
                  address: "\${{ env.VENUE_ADDRESS }}"
                }
              ],
              audio: {
                src: "/audio/fulfilling-humming.mp3",
                title: "Fulfilling Humming",
                autoplay: true,
                loop: true
              },
              banks: [
                {
                  bank: "\${{ env.GROOM_BANK }}",
                  accountNumber: "\${{ env.GROOM_ACCOUNT }}",
                  accountName: "\${{ env.GROOM_NAME }}"
                },
                {
                  bank: "\${{ env.BRIDE_BANK }}",
                  accountNumber: "\${{ env.BRIDE_ACCOUNT }}",
                  accountName: "\${{ env.BRIDE_NAME }}"
                }
              ]
            }
          };
          export default config;
          EOL

      # Create a pull request with the new wedding invitation changes.
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          title: "Add wedding invitation for ${{ env.GROOM_NAME }} & ${{ env.BRIDE_NAME }}"
          commit-message: "Add new wedding config for ${{ env.PROJECT_NAME }}"
          branch: "wedding/${{ env.PROJECT_NAME }}"
          body: |
            # New Wedding Invitation Created

            ## Couple Details
            - Groom: \${{ env.GROOM_NAME }}
            - Bride: \${{ env.BRIDE_NAME }}

            ## Event Details
            - Date: \${{ env.EVENT_DATE }}
            - Venue: \${{ env.VENUE_NAME }}
            - Address: \${{ env.VENUE_ADDRESS }}

            ## Deployment
            🌐 Website URL: https://\${{ env.PROJECT_NAME }}.sakeenah.app
